#+PROPERTY: header-args:R :async :results output verbatim  :exports both  :session *R* :cache no
#+Title: The state learner

This repository provides code that implements the state learner. We provide
examples of how to use it as a stand-alone tool and in combination with targeted
learning.

To run the examples below, run the following code to load the needed functions.

#+BEGIN_SRC R 
library(here)
library(targets)
tar_source(here("R-code/functions"))
#+END_SRC

#+RESULTS:


** Stand alone use of the state learner
We illustrate how to use the state learner by fitting it to the =Melanoma= data
set as provided by the =riskRegression= package.

#+BEGIN_SRC R
library(riskRegression)
data(Melanoma, package="riskRegression")
setDT(Melanoma)
head(Melanoma)
#+END_SRC

#+RESULTS:
:    time status                    event invasion ici      epicel       ulcer thick    sex age   logthick
: 1:   10      2       death.other.causes  level.1   2     present     present  6.76   Male  76  1.9110229
: 2:   30      2       death.other.causes  level.0   0 not present not present  0.65   Male  56 -0.4307829
: 3:   35      0                 censored  level.1   2 not present not present  1.34   Male  41  0.2926696
: 4:   99      2       death.other.causes  level.0   2 not present not present  2.90 Female  71  1.0647107
: 5:  185      1 death.malignant.melanoma  level.2   2     present     present 12.08   Male  52  2.4915512
: 6:  204      1 death.malignant.melanoma  level.2   2 not present     present  4.84   Male  28  1.5769147

We specify a list of learners. Each learner is specified through a list with a
=model= entry (for now, =cox=, =GLMnet=, and =rfsrc= are implemented), and a
=x_form= entry, which provides a formula which and how the covariates enter the
model. Additional arguments can be supplied to each learner by adding entries to
the list (e.g., =ntree= for a random survival forest).
#+BEGIN_SRC R
library(glmnet)
library(randomForestSRC)
learners <- list(
  cox = list("cox", x_form = ~sex+age+logthick),
  cox_penalty = list("GLMnet", x_form = ~invasion+ici+epicel+ulcer+sex+age+logthick),
  km = list("cox", x_form = ~1),
  km_strat = list("cox", x_form = ~strata(epicel)),
  rf = list("rfsrc", x_form = ~invasion+ici+epicel+ulcer+sex+age+logthick, ntree = 50)
)
#+END_SRC

#+RESULTS:

Below we use the same list of learner to learn all of the cumulative hazard for
cause 1, cause 2, and censoring. The state learner returns a =data.table= of
triples of learners sorted according to their joint performance in prediction
the state of the observed data in some time interval. Here we use an interval of
5 years.
#+BEGIN_SRC R
set.seed(111)
sl = statelearner(learners = list(cause1 = learners,
                                  cause2 = learners,
                                  censor = learners),
                  data = Melanoma,
                  time = 5*365.25)
head(sl)
#+END_SRC

#+RESULTS:
:    cause1      cause2      censor     loss b
: 1:     rf          km         cox 239.6142 1
: 2:     rf          km cox_penalty 239.8218 1
: 3:     rf          km          km 239.8678 1
: 4:     rf cox_penalty         cox 239.9478 1
: 5:     rf          km          rf 239.9732 1
: 6:     rf cox_penalty cox_penalty 240.1687 1

** Use for targeted estimation
